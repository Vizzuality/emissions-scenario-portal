apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: climate-watch
  labels:
    name: emissions-scenario-portal
  name: emissions-scenario-portal
spec:
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        name: emissions-scenario-portal
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - webapps
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - emissions-scenario-portal-staging
              topologyKey: kubernetes.io/hostname
      containers:
      - name: emissions-scenario-portal
        image: vizzuality/emissions-scenario-portal
        imagePullPolicy: Always
        resources:
          requests:
            memory: "0Mi"
            cpu: "0m"
        env:
          - name: MAILER_DEFAULT_FROM
            value: no-reply@staging.emissionspathways.org
          - name: MAILER_DEFAULT_URL
            value: staging.emissionpathways.org
          - name: AWS_REGION
            value: eu-west-1
          - name: RACK_ENV
            value: staging
          - name: RAILS_ENV
            value: staging
          - name: RAILS_LOG_TO_STDOUT
            value: "true"
          - name: PORT
            value: "3000"
          - name: RAILS_SERVE_STATIC_FILES
            value: "true"
          - name: S3_BUCKET_NAME
            value: climate-watch-dev
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: EMISSIONS_AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: EMISSIONS_AWS_SECRET_ACCESS_KEY
          - name: SPARKPOST_PASSWORD
            valueFrom:
              secretKeyRef:
                name: appsecrets
                key: EMISSIONS_SPARKPOST_PASSWORD
          - name: REDIS_URL
            value: redis://localhost:6379
          - name: POSTGRES_URL
            valueFrom:
                secretKeyRef:
                  name: dbsecrets
                  key: EMISSIONS_POSTGRES_URL
          - name: APPSIGNAL_PUSH_API_KEY
            valueFrom:
              secretKeyRef:
                name: appsecrets
                key: EMISSIONS_APP_SIGNAL_PUSH_API_KEY


        ports:
          - containerPort: 3000
      - name: emissions-scenario-portal-sidekiq
        image: vizzuality/emissions-scenario-portal
        imagePullPolicy: Always
        resources:
          requests:
            memory: "128Mi"
          limits:
            memory: "512Mi"
        command: ["bundle", "exec", "sidekiq"]
        env:
          - name: MAILER_DEFAULT_FROM
            value: no-reply@emissionspathways.org
          - name: MAILER_DEFAULT_URL
            value: www.emissionspathways.org
          - name: AWS_REGION
            value: eu-west-1
          - name: RACK_ENV
            value: staging
          - name: RAILS_ENV
            value: staging
          - name: PORT
            value: "3000"
          - name: RAILS_SERVE_STATIC_FILES
            value: "true"
          - name: S3_BUCKET_NAME
            value: climate-watch-dev
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: EMISSIONS_AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: EMISSIONS_AWS_SECRET_ACCESS_KEY
          - name: SECRET_KEY_BASE
            valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: EMISSIONS_SECRET_KEY_BASE
          - name: SPARKPOST_PASSWORD
            valueFrom:
              secretKeyRef:
                name: appsecrets
                key: EMISSIONS_SPARKPOST_PASSWORD
          - name: REDIS_URL
            value: redis://localhost:6379
          - name: POSTGRES_URL
            valueFrom:
                secretKeyRef:
                  name: dbsecrets
                  key: EMISSIONS_POSTGRES_URL
      - name: redis
        image: redis
        ports:
         - containerPort: 6379
        resources:
         requests:
           memory: 256Mi
           cpu: 100m

      restartPolicy: Always
